---
- name: Install Clickhouse on Ubuntu
  hosts: clickhouse
  become: true
  handlers:
    - name: Start clickhouse service
      ansible.builtin.service:
        name: clickhouse-server
        state: restarted
  tasks:
    - name: Check for broken dependencies
      ansible.builtin.command: dpkg --audit
      register: dpkg_audit
      changed_when: false
      failed_when: false

    - name: Fix dependencies
      ansible.builtin.apt:
        update_cache: true
        state: fixed
      when: dpkg_audit.stdout != ""

    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
        state: present

    - name: Download ClickHouse packages
      block:
        - name: Get clickhouse distrib (.deb)
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/{{ item }}/{{ item }}_{{ clickhouse_version }}_all.deb"
            dest: "/home/ubuntu/{{ item }}_{{ clickhouse_version }}_all.deb"
            mode: "0755"
          with_items: "{{ clickhouse_packages }}"
      rescue:
        - name: Get clickhouse distrib (fallback)
          ansible.builtin.get_url:
            url: "https://packages.clickhouse.com/deb/pool/main/c/clickhouse-common-static/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            dest: "/home/ubuntu/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
            mode: "0755"

    - name: Check if files exist
      ansible.builtin.stat:
        path: "/home/ubuntu/{{ item }}"
      register: file_check
      with_items:
        - "clickhouse-client_{{ clickhouse_version }}_all.deb"
        - "clickhouse-server_{{ clickhouse_version }}_all.deb"
        - "clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"

    - name: Install clickhouse-common-static
      ansible.builtin.apt:
        deb: "/home/ubuntu/clickhouse-common-static_{{ clickhouse_version }}_amd64.deb"
      notify: Start clickhouse service

    - name: Install clickhouse-client and clickhouse-server
      ansible.builtin.apt:
        deb: "/home/ubuntu/{{ item }}"
      with_items:
        - "clickhouse-client_{{ clickhouse_version }}_all.deb"
        - "clickhouse-server_{{ clickhouse_version }}_all.deb"
      notify: Start clickhouse service

    - name: Check for broken dependencies
      ansible.builtin.command: dpkg --audit
      register: dpkg_audit
      changed_when: false
      failed_when: false

    - name: Fix dependencies
      ansible.builtin.apt:
        update_cache: true
        state: fixed
      when: dpkg_audit.stdout != ""

    - name: Flush handlers
      ansible.builtin.meta: flush_handlers

    - name: Ensure clickhouse-server is installed
      ansible.builtin.package:
        name: clickhouse-server
        state: present

    - name: Create database
      ansible.builtin.command: "clickhouse-client -q 'create database logs;'"
      register: create_db
      failed_when: create_db.rc != 0 and create_db.rc != 82
      changed_when: create_db.rc == 0

- name: Install Vector on Ubuntu
  hosts: vector
  become: true
  handlers:
    - name: Start Vector service
      ansible.builtin.service:
        name: vector
        state: restarted
  tasks:
    - name: Check for broken dependencies
      ansible.builtin.command: dpkg --audit
      register: dpkg_audit
      changed_when: false
      failed_when: false

    - name: Fix dependencies
      ansible.builtin.apt:
        update_cache: true
        state: fixed
      when: dpkg_audit.stdout != ""

    - name: Download vector package (.deb)
      ansible.builtin.get_url:
        url: "{{ vector_url }}" # Используем переменную из group_vars
        dest: "/home/ubuntu/vector_{{ vector_version }}-1_amd64.deb"
        mode: "0644"

    - name: Install vector package
      become: true
      ansible.builtin.apt:
        deb: "/home/ubuntu/vector_{{ vector_version }}-1_amd64.deb"

    - name: Apply vector template
      become: true
      ansible.builtin.template:
        src: vector.yml.j2
        dest: "{{ vector_config_dir }}/vector.yml"
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        validate: vector validate --no-environment --config-yaml %s

    - name: Change vector systemd unit
      become: true
      ansible.builtin.template:
        src: vector.service.j2
        dest: /etc/systemd/system/vector.service
        mode: "0644"
        owner: "{{ ansible_user_id }}"
        group: "{{ ansible_user_gid }}"
        backup: true

    - name: Reload systemd to apply changes
      become: true
      ansible.builtin.systemd:
        daemon_reload: true

    - name: Ensure vector service is enabled and started
      become: true
      ansible.builtin.systemd:
        name: vector
        enabled: true
        state: started
